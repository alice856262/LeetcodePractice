class Solution:
    def strStr(self, haystack: str, needle: str) -> int:
        n, m = len(haystack), len(needle)
        if m == 0:
            return 0  # An empty needle is always found at index 0
        for i in range(n - m + 1):  # Iterate only where `needle` can fit
            if haystack[i:i + m] == needle:  # Check if substring matches `needle`
                return i
        return -1  # No match found

# runtime:0 ms
# memory:17.9 MB
