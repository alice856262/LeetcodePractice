# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        # Create a dummy node to simplify the merging process
        dummy = ListNode()
        current = dummy  # Pointer to the last node in the merged list
        
        # Traverse both lists until one becomes empty
        while list1 and list2:
            if list1.val < list2.val:
                current.next = list1  # Attach list1's current node
                list1 = list1.next  # Move to the next node in list1
            else:
                current.next = list2  # Attach list2's current node
                list2 = list2.next  # Move to the next node in list2
            current = current.next  # Advance the pointer in the merged list
        # Attach the remaining nodes of the non-empty list
        current.next = list1 if list1 else list2

        return dummy.next  # Return the merged list, skipping the dummy node

# runtime:0 ms
# memory:17.6 MB
